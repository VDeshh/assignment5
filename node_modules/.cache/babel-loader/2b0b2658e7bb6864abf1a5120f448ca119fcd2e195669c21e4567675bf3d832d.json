{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addItem, deleteItem, editItem } from './actions';\nimport Form from './components/Form';\nimport ShowAllCards from './ShowAllCards';\nimport InventoryCount from './components/InventoryCount';\nimport Navbar from './components/Navbar';\nimport { FaSearch } from 'react-icons/fa';\nimport './App.css';\nfunction App(props) {\n  _s();\n  const {\n    cards,\n    addItem,\n    deleteItem,\n    editItem\n  } = props;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortOption, setSortOption] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:3000/api/inventory') // Update the port number if necessary\n    .then(response => response.json()).then(data => {\n      const transformedCards = data;\n      transformedCards.forEach(item => addItem(item));\n    }).catch(error => {\n      console.error('Error retrieving inventory:', error);\n    });\n  }, [addItem]);\n  const handleAddItem = item => {\n    fetch('http://localhost:3000/api/inventory', {\n      // Update the port number if necessary\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).then(data => {\n      const newItem = data;\n      addItem(newItem);\n      window.location.reload();\n    }).catch(error => {\n      console.error('Error adding item:', error);\n    });\n  };\n  const handleDelete = id => {\n    fetch(`http://localhost:3000/api/inventory/${id}`, {\n      // Update the port number if necessary\n      method: 'DELETE'\n    }).then(() => {\n      deleteItem(id);\n    }).catch(error => {\n      console.error('Error deleting item:', error);\n    });\n  };\n  const handleEdit = (id, updatedItem) => {\n    fetch(`http://localhost:3000/api/inventory/${id}`, {\n      // Update the port number if necessary\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedItem)\n    }).then(response => response.json()).then(data => {\n      const editedItem = data;\n      editItem(id, editedItem);\n    }).catch(error => {\n      console.error('Error editing item:', error);\n    });\n  };\n  const handleSearchChange = e => {\n    const searchTerm = e.target.value;\n    fetch(`http://localhost:3000/api/inventory/search?searchTerm=${searchTerm}`).then(response => response.json()).then(data => {\n      const filteredItems = data;\n      setSearchTerm(e.target.value);\n    }).catch(error => {\n      console.error('Error searching inventory:', error);\n    });\n    setSearchTerm(searchTerm);\n  };\n  const handleSortChange = e => {\n    const option = e.target.value;\n    setSortOption(option);\n    fetch(`http://localhost:3000/api/inventory?sort=${option}`).then(response => response.json()).then(data => {\n      const sortedItems = data;\n      // Update the Redux state with the sorted items\n      // ...\n    }).catch(error => {\n      console.error('Error sorting inventory:', error);\n    });\n  };\n\n  // ... Rest of your code\n}\n\n// ... Rest of your code\n_s(App, \"0Bv9Vlrh5UNLBVHZ0VwnwKYXcUg=\");\n_c = App;\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","connect","addItem","deleteItem","editItem","Form","ShowAllCards","InventoryCount","Navbar","FaSearch","App","props","_s","cards","searchTerm","setSearchTerm","sortOption","setSortOption","fetch","then","response","json","data","transformedCards","forEach","item","catch","error","console","handleAddItem","method","headers","body","JSON","stringify","newItem","window","location","reload","handleDelete","id","handleEdit","updatedItem","editedItem","handleSearchChange","e","target","value","filteredItems","handleSortChange","option","sortedItems","_c","mapStateToProps","mapDispatchToProps","$RefreshReg$"],"sources":["/Users/vishaldesh/Desktop/assignment2/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addItem, deleteItem, editItem } from './actions';\nimport Form from './components/Form';\nimport ShowAllCards from './ShowAllCards';\nimport InventoryCount from './components/InventoryCount';\nimport Navbar from './components/Navbar';\nimport { FaSearch } from 'react-icons/fa';\nimport './App.css';\n\nfunction App(props) {\n  const { cards, addItem, deleteItem, editItem } = props;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortOption, setSortOption] = useState('');\n\n  useEffect(() => {\n    fetch('http://localhost:3000/api/inventory') // Update the port number if necessary\n      .then(response => response.json())\n      .then(data => {\n        const transformedCards = data;\n        transformedCards.forEach(item => addItem(item));\n      })\n      .catch(error => {\n        console.error('Error retrieving inventory:', error);\n      });\n  }, [addItem]);\n\n  const handleAddItem = (item) => {\n    fetch('http://localhost:3000/api/inventory', { // Update the port number if necessary\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(item),\n    })\n      .then(response => response.json())\n      .then(data => {\n        const newItem = data;\n        addItem(newItem);\n        window.location.reload();\n      })\n      .catch(error => {\n        console.error('Error adding item:', error);\n      });\n  };\n\n  const handleDelete = (id) => {\n    fetch(`http://localhost:3000/api/inventory/${id}`, { // Update the port number if necessary\n      method: 'DELETE',\n    })\n      .then(() => {\n        deleteItem(id);\n      })\n      .catch(error => {\n        console.error('Error deleting item:', error);\n      });\n  };\n\n  const handleEdit = (id, updatedItem) => {\n    fetch(`http://localhost:3000/api/inventory/${id}`, { // Update the port number if necessary\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedItem),\n    })\n      .then(response => response.json())\n      .then(data => {\n        const editedItem = data;\n        editItem(id, editedItem);\n      })\n      .catch(error => {\n        console.error('Error editing item:', error);\n      });\n  };\n\n  const handleSearchChange = (e) => {\n    const searchTerm = e.target.value;\n\n    fetch(`http://localhost:3000/api/inventory/search?searchTerm=${searchTerm}`)\n      .then(response => response.json())\n      .then(data => {\n        const filteredItems = data;\n        setSearchTerm(e.target.value);\n      })\n      .catch(error => {\n        console.error('Error searching inventory:', error);\n      });\n\n    setSearchTerm(searchTerm);\n  };\n\n  const handleSortChange = (e) => {\n    const option = e.target.value;\n    setSortOption(option);\n\n    fetch(`http://localhost:3000/api/inventory?sort=${option}`)\n      .then(response => response.json())\n      .then(data => {\n        const sortedItems = data;\n        // Update the Redux state with the sorted items\n        // ...\n      })\n      .catch(error => {\n        console.error('Error sorting inventory:', error);\n      });\n  };\n\n  // ... Rest of your code\n}\n\n// ... Rest of your code\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}